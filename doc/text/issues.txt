

consistent representation of dimensionless
dimensional analysis : need representation of dimensionless nil void etc

     maybe dimensionless is just empty dimension_list.

change dimension_list to just type_list ?
   Problematic for custom dimensions so should be unique


named_dimension : rename to custom_dimension

generics. Move si system specific stuff to si namespace
create alternative system to test. 
Many historical to choose

E.g https://en.wikipedia.org/wiki/System_of_measurement

binary_op semantics
   depend on quantity_system?


    in si :
         if one only is conversion then convert it to nearest si before calc.

         if both non si  then do op on the conversion factor

Unary_op : si

          pow: for powers where den != 1 then quantity must be made coherent before calc and result is coherent.
            2 ways to convert to coherent. coherent or log_coherent

Note that conversion factor is an si thing but will try to use it for other systems

what is unique to si

    si::measurement_system
    si::units
    si::unit_conversions 
    si semantic
    unit exponent

change quantity system to measurement_system


neatest way is to have a 
template <typename ...T>
struct quantity;

dimension can be customised for e,g energy v torque
unit can be customised for e.g abfarad
template <in_dimension D, in_si_unit siCF, in_dimensionless V>
struct basic_quantity<D,siCF,V>
{
    
};

basic_quantity<

template <typename U, typename V>
struct basic_quantity<U,V>
{

};



