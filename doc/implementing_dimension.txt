Ways of specifying a dimension(aka set of exponents of base_dimensions) for a calc

One option is to provide total_order. Mpusz-units currently uses string to provide a unique order, ok in practise
For pqs, would have to be an id such as a type, integer or enum

unique_order needs less than equal to, theoretically open but items can clash

Another option is to provide a set of base_dimensions that can be iterated.

set needs ops{which...?} but being closed ( and available in one place presumably) no chance of a clash

In practise both options are closed since they need to be available at compile time.

// standard si header
using standard_physical_base_dimensions =  type_list<dim_length, dim_time ,dim_mass, dim_temperature,dim_current,dim_substance, dim_intensity>

required to point to base_dimensions

using base_dimensions = std::meta_insert<2,standard_physical_base_dimensions,apples> ;
}

quantity view

quantity1 exists in dimension1, quantity 2 exists in dimension2

the universe then comprise the unique set of base_dimensions in dimension1 or in dimensions2 or in dimension1 and in dimension2









